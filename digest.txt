Directory structure:
└── chiragjoshi12.github.io/
    ├── README.md
    ├── LICENSE
    ├── eslint.config.mjs
    ├── next-env.d.ts
    ├── next.config.js
    ├── package.json
    ├── postcss.config.mjs
    ├── tailwind.config.ts
    ├── tsconfig.json
    ├── public/
    │   └── robots.txt
    ├── src/
    │   ├── app/
    │   │   ├── globals.css
    │   │   ├── layout.tsx
    │   │   ├── page.tsx
    │   │   ├── sitemap.ts
    │   │   ├── blog/
    │   │   │   └── page.tsx
    │   │   ├── books/
    │   │   │   └── page.tsx
    │   │   └── fonts/
    │   │       ├── Geist-Regular.woff2
    │   │       └── GeistMono-Regular.woff2
    │   ├── components/
    │   │   ├── ScrollToTopButton.tsx
    │   │   ├── bookshelf.tsx
    │   │   ├── education-entry.tsx
    │   │   ├── experience-entry.tsx
    │   │   ├── news-entry.tsx
    │   │   ├── portfolio-entry.tsx
    │   │   ├── profile-section.tsx
    │   │   └── publication-entry.tsx
    │   └── data/
    │       ├── aboutme.ts
    │       ├── blog.ts
    │       ├── books.ts
    │       ├── education.ts
    │       ├── experience.ts
    │       ├── news.ts
    │       ├── portfolio.ts
    │       ├── publication.ts
    │       ├── section-order.ts
    │       └── title-description.ts
    └── .github/
        └── workflows/
            └── nextjs.yml

================================================
File: README.md
================================================
# research-website-template

This is a React + Next.js template meant for research websites. See a [demo of the template here](https://tovacinni.github.io/research-website-template/). My own [personal website](https://tovacinni.github.io) is also built with the same template.

In practice it could probably be used by anyone.

It is meant to be customizeable, all through modifying the `src/data` - which have arrays of objects that are used to generate the website.

For example, `src/data/publication.ts` contains an array like:

```typescript
export const publicationData: Publication[] = [
  {
    year: "2023",
    conference: "International Conference on Machine Learning (ICML)",
    title: "Robust Causal Discovery Under Distribution Shift",
    authors: "Jane Smith, Xue Chen, Sarah Johnson",
    paperUrl: "https://arxiv.org/abs/2302.13095",
    codeUrl: "https://github.com/jsmith/robust-causal-discovery",
  },
];
```

To update your website, you can simply add objects to the array.

The schemas are defined in the same files, and many fields are optional for flexibility:

```typescript
export interface Publication {
  year: string;
  conference: string;
  title: string;
  authors: string;
  paperUrl?: string;
  codeUrl?: string;
  bibtex?: string;
  tldr?: string;
  imageUrl?: string;
  award?: string;
}
```

Any field with a `?` at the end is optional. Filling them in will create the UI components corresponding to them automatically.

You can also change the order of the sections in `src/data/section-order.ts`, and if you want full customization you can just edit the React components in `src/components`.

This project was birthed from annoyance over HTML + CSS templates- such as the very popular [Jon Barron template](https://github.com/jonbarron/website). The Jon Barron template is amazing because it is simple & complete which is why it's so popular- but over time, maintenance becomes difficult from the amount of duplicate code it creates (the Jon Barron index is now over 4000 lines of code). This is meant to be a much more minimal (to maintain) alternative (and was a good way to spend a few hours to build over holiday weekend).

## Prerequisites

First, install Node.js and npm through the [Node.js official website](https://nodejs.org/).

Verify installation by running:

```bash
node --version
npm --version
```

## Installation

1. Fork the repository

2. Clone the repository

   ```bash
   git clone [your-repository-url]
   cd [repository-name]
   ```

3. Install dependencies

   Inside the repository, run:

   ```bash
   npm install
   ```

## Running the Application

1. To start the development server, run (in the repository directory):

   ```bash
   npm run dev
   ```

2. Open [http://localhost:3000](http://localhost:3000) with your browser to see the result.

## Deploying onto GitHub Pages

1. Fork or clone this repo and push to your own repository at `[your-github-username].github.io`.

2. In your repository settings, ensure the repository name matches `[your-github-username].github.io` if you want it to be your main GitHub Pages site.

3. Push your changes to the main branch.

4. Go to the GitHub page for your repository and go to `Settings` then `Pages`. If you set Source to be `GitHub Actions`, it should suggest you a build script for Next.js.

5. Commit the build script and see things building.

Your site should now be live at `https://[your-github-username].github.io/`.

## Deploying to your own domain

The easiest way to deploy your Next.js app is to use the [Vercel Platform](https://vercel.com/) from the creators of Next.js.

1. Create a [Vercel account](https://vercel.com/signup) if you haven't already
2. Push your code to a Git repository (GitHub, GitLab, or Bitbucket)
3. Import your repository on Vercel
4. Vercel will automatically detect Next.js and configure the build settings
5. Click "Deploy"

## Contributing

Feel free to drop a pull request whenever!



================================================
File: LICENSE
================================================
MIT License

Copyright (c) 2025 Towaki

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.



================================================
File: eslint.config.mjs
================================================
import { dirname } from "path";
import { fileURLToPath } from "url";
import { FlatCompat } from "@eslint/eslintrc";

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

const compat = new FlatCompat({
  baseDirectory: __dirname,
});

const eslintConfig = [
  ...compat.extends("next/core-web-vitals", "next/typescript"),
];

export default eslintConfig;



================================================
File: next-env.d.ts
================================================
/// <reference types="next" />
/// <reference types="next/image-types/global" />

// NOTE: This file should not be edited
// see https://nextjs.org/docs/app/building-your-application/configuring/typescript for more information.



================================================
File: next.config.js
================================================
/** @type {import('next').NextConfig} */
const nextConfig = {
  images: {
    remotePatterns: [
      {
        protocol: 'https',
        hostname: 'images.unsplash.com',
      },
      {
        protocol: 'https',
        hostname: 'i.ibb.co',
      },
      {
        protocol: 'https',
        hostname: 'web.edutorapp.com',
      },
      {
        protocol: 'https',
        hostname: 'chiragjoshi12.github.io',
      },
      {
        protocol: 'https',
        hostname: 'via.placeholder.com',
      },
      {
        protocol: 'https',
        hostname: 'roastfolio.vercel.app',
      },
    ],
  },
};

module.exports = nextConfig;



================================================
File: package.json
================================================
{
  "name": "research-website-template",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint"
  },
  "dependencies": {
    "lucide-react": "^0.469.0",
    "next": "^14.2.28",
    "react": "^18.2.0",
    "react-dom": "^18.2.0"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3",
    "@types/node": "^20",
    "@types/react": "^18.3.20",
    "@types/react-dom": "^18.3.6",
    "eslint": "^9",
    "eslint-config-next": "latest",
    "eslint-config-prettier": "^9.1.0",
    "postcss": "^8",
    "tailwindcss": "^3.4.1",
    "typescript": "^5"
  }
}



================================================
File: postcss.config.mjs
================================================
/** @type {import('postcss-load-config').Config} */
const config = {
  plugins: {
    tailwindcss: {},
  },
};

export default config;



================================================
File: tailwind.config.ts
================================================
import type { Config } from "tailwindcss";

export default {
  content: [
    "./src/pages/**/*.{js,ts,jsx,tsx,mdx}",
    "./src/components/**/*.{js,ts,jsx,tsx,mdx}",
    "./src/app/**/*.{js,ts,jsx,tsx,mdx}",
  ],
  theme: {
    extend: {
      colors: {
        background: "var(--background)",
        foreground: "var(--foreground)",
      },
    },
  },
  plugins: [],
} satisfies Config;



================================================
File: tsconfig.json
================================================
{
  "compilerOptions": {
    "target": "es5", // Or newer
    "lib": ["dom", "dom.iterable", "esnext"],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": true,
    "forceConsistentCasingInFileNames": true,
    "noEmit": true,
    "esModuleInterop": true,
    "module": "esnext",
    "moduleResolution": "bundler", // Or "node" depending on setup
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve", // Important for Next.js
    "incremental": true,
    "plugins": [
      {
        "name": "next"
      }
    ],
    "paths": {
      "@/*": ["./src/*"] // Or your alias setup
    }
    // Remove "types": [...] if present, unless you specifically need to override something
  },
  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", ".next/types/**/*.ts", "next.config.js"],
  "exclude": ["node_modules"]
}


================================================
File: public/robots.txt
================================================
# public/robots.txt
User-agent: *
Allow: /

Sitemap: https://chiragjoshi12.github.io/sitemap.xml


================================================
File: src/app/globals.css
================================================
@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --background: #fff;
  --foreground: #171717;
}

body {
  color: var(--foreground);
  background: var(--background);
  font-family: var(--source-serif-font), Georgia, serif;
}

/* Elements marked with serif class or font-serif will use Source Serif */
.font-serif,
.serif {
  font-family: ui-serif,var(--font-pt-serif),var(--font-noto-serif), Georgia,
  serif;
}

/* Elements marked with sans or font-sans will use Geist */
.font-sans,
.sans {
  font-family: var(--font-geist-sans), system-ui, sans-serif;
}

@layer base {
  .prose {
    @apply text-zinc-700 leading-relaxed text-lg max-w-none;
  }

  .prose h1 {
    @apply font-serif text-3xl font-bold text-zinc-800 mt-8 mb-4;
  }

  .prose h2 {
    @apply font-serif text-2xl font-semibold text-zinc-800 mt-7 mb-3 border-b border-zinc-200 pb-2;
  }

  .prose h3 {
    @apply font-serif text-xl font-medium text-zinc-800 mt-6 mb-2;
  }

  .prose p {
    @apply my-4 text-lg;
  }

  .prose strong {
    @apply font-semibold text-zinc-900;
  }

  .prose blockquote {
    @apply pl-4 italic border-l-4 border-zinc-300 text-zinc-600 my-6;
  }

  .prose a {
    @apply text-blue-600 hover:text-blue-800 underline underline-offset-2 decoration-blue-300 font-medium;
  }

  .prose img {
    @apply rounded-lg shadow-md my-6 mx-auto;
  }

  /* Code block styling */
  .prose pre {
    @apply bg-zinc-900 text-zinc-100 rounded-lg p-4 my-6 overflow-x-auto;
  }

  .prose :where(code):not(:where([class~="not-prose"], pre *)) {
    @apply bg-zinc-100 text-zinc-700 rounded-md px-1.5 py-0.5 font-mono text-sm;
  }

  /* Lists styling */
  .prose ul {
    @apply list-disc pl-6 my-4 space-y-2;
  }

  .prose ol {
    @apply list-decimal pl-6 my-4 space-y-2;
  }

  /* Table styling */
  .prose table {
    @apply w-full my-6 border-collapse;
  }

  .prose th {
    @apply bg-zinc-100 p-2 border border-zinc-300 text-left font-semibold;
  }

  .prose td {
    @apply p-2 border border-zinc-300;
  }
}

/* KaTeX formula styling */
.katex-display {
  @apply my-4 overflow-auto;
}


================================================
File: src/app/layout.tsx
================================================
// src/app/layout.tsx
import type { Metadata } from "next";
import { Noto_Serif, PT_Serif } from "next/font/google";
import localFont from 'next/font/local';
import "./globals.css";
import { aboutMe } from "@/data/aboutme";
import { customMetadata } from "@/data/title-description";
import Link from "next/link";

// --- Font setup (keep as is) ---
const geistSans = localFont({
  src: './fonts/Geist-Regular.woff2', // Adjust path
  variable: '--font-geist-sans',
  display: 'swap',
});

const geistMono = localFont({
  src: './fonts/GeistMono-Regular.woff2', // Adjust path
  variable: '--font-geist-mono',
  display: 'swap',
});

const notoSerif = Noto_Serif({ variable: "--font-noto-serif", subsets: ["latin"], weight: ["400", "700"] });
const ptSerif = PT_Serif({ variable: "--font-pt-serif", subsets: ["latin"], weight: ["400", "700"] });

// --- Metadata (keep as is) ---
export const metadata: Metadata = {
  title: customMetadata.title || aboutMe.name,
  description: customMetadata.description || aboutMe.description,
  icons: { icon: "https://i.ibb.co/JWR3wbBD/favicon-1.jpg" },
};

const jsonLd = {
  '@context': 'https://schema.org',
  '@type': 'Person',
  name: aboutMe.name,
  url: 'https://chiragjoshi12.github.io',
  image: aboutMe.imageUrl,
  jobTitle: aboutMe.title,
  worksFor: {
    '@type': 'Organization',
    name: aboutMe.institution,
  },
  email: aboutMe.email,
  sameAs: [
    `https://github.com/${aboutMe.githubUsername}`,
    `https://www.linkedin.com/in/${aboutMe.linkedinUsername}`,
    `https://twitter.com/${aboutMe.twitterUsername}`,
    aboutMe.institutionUrl,
  ],
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <head>
         {/* ADD THIS LINE FOR KATEX STYLES */}
         <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/katex@0.16.9/dist/katex.min.css" integrity="sha384-n8MVd4RsNIU0tAv4ct0nTaAbDJwPJzDEaqSD1tBCETVFN/4gFh6zSOXP4CvvrSay" crossOrigin="anonymous" />
         <script
          type="application/ld+json"
          dangerouslySetInnerHTML={{ __html: JSON.stringify(jsonLd) }}
        />
      </head>
      <body
        className={`${geistSans.variable} ${geistMono.variable} ${notoSerif.variable} ${ptSerif.variable} antialiased`}
      >
        {/* <header className="bg-[#fefce8] py-4 px-8 sticky top-0 z-10"> Make header sticky and appear on top of content */}
          {/* <nav className="flex items-center justify-between max-w-screen-lg mx-auto"> Ensure navigation stays within the main content width */}
            {/* <Link href="/" className="font-bold text-xl font-sans text-zinc-900">Chirag Joshi</Link> Your name/logo with font */}
            {/* <div className="flex gap-4 font-sans"> */}
              {/* <Link href="/blog" className="hover:underline text-zinc-700">Blog</Link> */}
              {/* <Link href="/books" className="hover:underline text-zinc-700">Books</Link> Added Books link */}
            {/* </div> */}
          {/* </nav> */}
        {/* </header> */}

        <main className="bg-[#FFFCF8]">{children}</main> {/* Ensure main content area has appropriate background */}
        {/* You could add a footer here */}
      </body>
    </html>
  );
}


================================================
File: src/app/page.tsx
================================================
import { EducationEntry } from "@/components/education-entry";
import { educationData } from "@/data/education";
import { PublicationEntry } from "@/components/publication-entry";
import { publicationData } from "@/data/publication";
import { ProfileSection } from "@/components/profile-section";
import { aboutMe } from "@/data/aboutme";
import { NewsEntry } from "@/components/news-entry";
import { newsData } from "@/data/news";
import { ExperienceEntry } from "@/components/experience-entry";
import { experienceData } from "@/data/experience";
import { PortfolioEntry } from "@/components/portfolio-entry";
import { portfolioData } from "@/data/portfolio";
import { sectionOrder, Section } from "@/data/section-order";

export default function Home() {
  return (
    <div className="min-h-screen bg-[#FFFCF8]">
      {/* Don't have a great call on whether max-w-screen-xl is better */}
      <div className="max-w-screen-lg mx-auto px-8 py-24">
        {/* Grid Layout */}
        <div className="grid grid-cols-1 md:grid-cols-12 gap-2">
          {/* Left Column - Fixed Info */}
          <div className="col-span-12 md:col-span-4 space-y-12 mb-8 md:mb-0">
            {/* Profile */}
            <div className="md:sticky top-12 space-y-8">
              <ProfileSection aboutMe={aboutMe} />
            </div>
          </div>

          {/* Right Column - Scrolling Content */}
          <div className="col-span-12 md:col-span-7 md:col-start-6 space-y-14">
            {/* About section is typically first */}
            {aboutMe.description && (
              <section>
                <p
                  className="font-serif text-[17px] leading-relaxed text-zinc-700 [&_a]:underline [&_a]:text-zinc-900 [&_a:hover]:text-zinc-600"
                  dangerouslySetInnerHTML={{ __html: aboutMe.description }}
                />
              </section>
            )}

            {/* Map through sectionOrder to render sections in correct order */}
            {sectionOrder.map((sectionName) => {
              // Most of this is redundant... but in case it needs to be unique.
              switch (sectionName) {
                case Section.News:
                  return (
                    newsData.length > 0 && (
                      <section key={sectionName}>
                        <h2 className="font-serif text-l mb-12 tracking-wide uppercase">
                          News
                        </h2>
                        <div className="space-y-12">
                          {newsData.map((news, index) => (
                            <div key={index}>
                              <NewsEntry news={news} />
                            </div>
                          ))}
                        </div>
                      </section>
                    )
                  );
                case Section.Education:
                  return (
                    educationData.length > 0 && (
                      <section key={sectionName}>
                        <h2 className="font-serif text-zinc-700 mb-12 tracking-wide uppercase">
                          Education
                        </h2>
                        <div className="space-y-12">
                          {educationData.map((education, index) => (
                            <EducationEntry key={index} education={education} />
                          ))}
                        </div>
                      </section>
                    )
                  );
                case Section.Publication:
                  return (
                    publicationData.length > 0 && (
                      <section key={sectionName}>
                        <h2 className="font-serif text-l mb-12 tracking-wide uppercase">
                          Publications
                        </h2>
                        <div className="space-y-12">
                          {publicationData.map((publication, index) => (
                            <div key={index}>
                              <PublicationEntry publication={publication} />
                              {index < publicationData.length - 1 && (
                                <div className="h-px bg-zinc-200 my-8" />
                              )}
                            </div>
                          ))}
                        </div>
                      </section>
                    )
                  );
                case Section.Experience:
                  return (
                    experienceData.length > 0 && (
                      <section key={sectionName}>
                        <h2 className="font-serif text-md mb-12 tracking-wide uppercase font-bold">
                          Experience
                        </h2>
                        <div className="space-y-12">
                          {experienceData.map((experience, index) => (
                            <ExperienceEntry
                              key={index}
                              experience={experience}
                            />
                          ))}
                        </div>
                      </section>
                    )
                  );
                case Section.Portfolio:
                  return (
                    portfolioData.length > 0 && (
                      <section key={sectionName}>
                        <h2 className="font-serif text-md mb-12 tracking-wide uppercase font-bold">
                          Projects
                        </h2>
                        <div className="space-y-12">
                          {portfolioData.map((portfolio, index) => (
                            <PortfolioEntry key={index} portfolio={portfolio} />
                          ))}
                        </div>
                      </section>
                    )
                  );
                default:
                  return null;
              }
            })}
          </div>
        </div>
      </div>
    </div>
  );
}



================================================
File: src/app/sitemap.ts
================================================
// src/app/sitemap.ts
import { MetadataRoute } from 'next';

export default function sitemap(): MetadataRoute.Sitemap {
  const baseUrl = 'https://chiragjoshi12.github.io';

  return [
    {
      url: baseUrl,
      lastModified: new Date(),
      changeFrequency: 'monthly',
      priority: 1,
    },
    {
      url: `${baseUrl}/blog`,
      lastModified: new Date(),
      changeFrequency: 'weekly',
      priority: 0.8,
    },
    {
      url: `${baseUrl}/books`,
      lastModified: new Date(),
      changeFrequency: 'monthly',
      priority: 0.7,
    },
  ];
}


================================================
File: src/app/blog/page.tsx
================================================
// src/app/blog/page.tsx

import Link from 'next/link';
import { blogData } from '@/data/blog'; // Import your new blog data

// Helper function to format the date string
function formatDate(dateString: string): string {
  const date = new Date(dateString);
  const day = date.getUTCDate().toString().padStart(2, '0');
  const month = date.toLocaleString('en-US', { month: 'short', timeZone: 'UTC' });
  const year = date.getUTCFullYear();
  return `${day} ${month}, ${year}`;
}

export const metadata = {
  title: "Blog",
  description: "Blog posts by Chirag Joshi",
};

export default function BlogIndexPage() {
  // Sort posts by date in descending order
  const posts = blogData.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());

  return (
    <div className="min-h-screen text-black font-sans">
      <div className="px-6 py-12 max-w-3xl mx-auto">
        <h1 className="text-4xl font-bold mb-6">Chirag's World</h1>
        
        <nav className="flex gap-6 mb-10 text-lg">
          <Link href="/" className="underline decoration-red-500 underline-offset-4">
            Home
          </Link>
          <span className="underline decoration-red-500 underline-offset-4 font-bold">
            Blog
          </span>
          <Link href="/books" className="underline decoration-red-500 underline-offset-4">
            Books
          </Link>
        </nav>

        <p className="text-xl mb-12">
          I write about what I'm learning, building, or thinking.
        </p>

        <hr className="border-t border-black border-dotted mb-8" />

        <div className="space-y-5">
          {posts.map((post) => (
            <div key={post.title} className="flex gap-6 items-baseline">
              <span className="w-32 text-gray-500">{formatDate(post.date)}</span>
              {/* This is the key change: an <a> tag opening in a new tab */}
              <a href={post.url} target="_blank" rel="noopener noreferrer">
                <span className="border-b-4 border-red-500 pb-1 hover:text-gray-700 transition-colors">
                  {post.title}
                </span>
              </a>
            </div>
          ))}
        </div>

        <hr className="border-t border-black border-dotted mt-10" />
      </div>
    </div>
  );
}


================================================
File: src/app/books/page.tsx
================================================
// src/app/books/page.tsx
import { Bookshelf } from "@/components/bookshelf";
import { booksByYear } from "@/data/books";
import Link from 'next/link';

export const metadata = {
  title: "Books",
  description: "Books I've read and recommend.",
};

export default function BooksPage() {
  return (
    <div className="min-h-screen text-black font-sans">
      <div className="px-6 py-12 max-w-3xl mx-auto">
        <h1 className="text-4xl font-bold mb-6">Chirag's World</h1>
        
        <nav className="flex gap-6 mb-10 text-lg">
          <Link href="/" className="underline decoration-red-500 underline-offset-4">
            Home
          </Link>
          <Link href="/blog" className="underline decoration-red-500 underline-offset-4">
            Blog
          </Link>
          <span className="underline decoration-red-500 underline-offset-4 font-bold">
            Books
          </span>
        </nav>
        
        <p className="text-xl mb-12">
          Here are books I have read recently. All of them were good. Some were{" "}
          <span className="text-blue-600">great</span>. A few were{" "}
          <span className="text-green-600">remarkable</span>. Feel free to send me recommendations.
        </p>
        
        <Bookshelf booksByYear={booksByYear} />
      </div>
    </div>
  );
}


================================================
File: src/app/fonts/Geist-Regular.woff2
================================================
[Non-text file]


================================================
File: src/app/fonts/GeistMono-Regular.woff2
================================================
[Non-text file]


================================================
File: src/components/ScrollToTopButton.tsx
================================================
'use client';

import { useState, useEffect } from 'react';

export default function ScrollToTopButton() {
  const [isVisible, setIsVisible] = useState(false);

  // Show button when page is scrolled down
  useEffect(() => {
    const toggleVisibility = () => {
      if (window.pageYOffset > 300) {
        setIsVisible(true);
      } else {
        setIsVisible(false);
      }
    };

    // Initial check
    toggleVisibility();
    
    // Add event listener
    window.addEventListener('scroll', toggleVisibility);
    
    // Clean up event listener
    return () => window.removeEventListener('scroll', toggleVisibility);
  }, []);

  // Scroll to top smoothly
  const scrollToTop = () => {
    window.scrollTo({
      top: 0,
      behavior: 'smooth'
    });
  };

  return (
    <>
      {isVisible && (
        <button
          onClick={scrollToTop}
          className="fixed bottom-6 right-6 p-3 bg-zinc-800 text-white rounded-full shadow-lg hover:bg-zinc-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-zinc-500 transition-all duration-300 z-50"
          aria-label="Scroll to top"
        >
          <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 10l7-7m0 0l7 7m-7-7v18" />
          </svg>
        </button>
      )}
    </>
  );
}


================================================
File: src/components/bookshelf.tsx
================================================
// src/components/bookshelf.tsx
// The unused 'Link' import has been removed.

interface Book {
  title: string;
  author: string;
  url?: string; // A URL for purchasing the book or for more info
  highlight?: "normal" | "great" | "remarkable";
}

interface BooksByYear {
  year: string;
  books: Book[];
}

interface BookshelfProps {
  booksByYear: BooksByYear[];
}

export function Bookshelf({ booksByYear }: BookshelfProps) {
  // Function to determine text color based on highlight status
  const getHighlightColor = (highlight?: string) => {
    switch (highlight) {
      case "great":
        return "text-blue-600";
      case "remarkable":
        return "text-green-600";
      default:
        return "text-black";
    }
  };

  return (
    <div className="max-w-3xl">
      {booksByYear.map((yearData, yearIndex) => (
        <div key={yearIndex} className="mb-12">
          <h2 className="text-4xl font-bold text-zinc-800 mb-6">{yearData.year}</h2>
          <ul className="list-disc pl-8 space-y-3">
            {yearData.books.map((book, bookIndex) => (
              <li key={bookIndex} className={`text-lg ${getHighlightColor(book.highlight)}`}>
                {book.url ? (
                  <a
                    href={book.url}
                    target="_blank"
                    rel="noopener noreferrer"
                    className="hover:underline" // Underline on hover for better UX
                  >
                    {`${book.title} by ${book.author}`}
                  </a>
                ) : (
                  <span>{`${book.title} by ${book.author}`}</span>
                )}
              </li>
            ))}
          </ul>
        </div>
      ))}
    </div>
  );
}


================================================
File: src/components/education-entry.tsx
================================================
import { Education } from "@/data/education";

export function EducationEntry({ education }: { education: Education }) {
  return (
    <div>
      <div className="grid grid-cols-4 gap-x-2 mb-2">
        <span className="text-xs text-zinc-500 mt-1">{education.year}</span>
        <div className="col-span-3">
          <h3 className="text-base mb-1 font-serif">{education.institution}</h3>
          <p className="text-sm text-zinc-600">{education.degree}</p>
          {education.advisor && (
            <p className="text-sm text-zinc-500 mt-2 italic">
              Advisor: {education.advisor}
            </p>
          )}
          {education.thesis && (
            <p className="text-sm text-zinc-500 mt-2 italic">
              Thesis:{" "}
              {education.thesisUrl ? (
                <a
                  href={education.thesisUrl}
                  className="hover:underline"
                  target="_blank"
                  rel="noopener noreferrer"
                >
                  {education.thesis}
                </a>
              ) : (
                education.thesis
              )}
            </p>
          )}
        </div>
      </div>
    </div>
  );
}



================================================
File: src/components/experience-entry.tsx
================================================
import { Experience } from "@/data/experience";

export function ExperienceEntry({ experience }: { experience: Experience }) {
  return (
    <div className="grid grid-cols-4 gap-x-2">
      <span className="text-xs text-zinc-500 mt-1">{experience.date}</span>
      <div className="col-span-3 flex flex-col">
        <h3 className="text-base font-serif">
          {experience.title} —{" "}
          {experience.companyUrl ? (
            <a
              href={experience.companyUrl}
              className="hover:text-zinc-600 transition-colors"
              target="_blank"
              rel="noopener noreferrer"
            >
              {experience.company}
            </a>
          ) : (
            experience.company
          )}
        </h3>
        {experience.advisor && (
          <p className="text-sm text-zinc-600 leading-relaxed italic mt-2">
            Advisor: {experience.advisor}
          </p>
        )}
        {experience.manager && (
          <p className="text-sm text-zinc-600 leading-relaxed italic mt-2">
            Manager: {experience.manager}
          </p>
        )}
        {experience.description && (
          <p className="text-sm text-zinc-600 leading-relaxed mt-2">
            {experience.description}
          </p>
        )}
      </div>
    </div>
  );
}



================================================
File: src/components/news-entry.tsx
================================================
import { ArrowUpRight } from "lucide-react";
import { News } from "@/data/news";

export function NewsEntry({ news }: { news: News }) {
  return (
    <div className="flex flex-row gap-6">
      <div className="flex flex-col flex-1">
        <p className="text-xs text-zinc-500 mb-2">{news.date}</p>
        <h3 className="font-serif text-md mb-3">
          {news.link ? (
            <a
              href={news.link}
              target="_blank"
              rel="noopener noreferrer"
              className="group inline-flex items-center gap-2 hover:text-zinc-600 transition-colors duration-300"
            >
              {news.title}
              <ArrowUpRight
                size={16}
                className="group-hover:translate-x-0.5 group-hover:-translate-y-0.5 transition-transform duration-300"
              />
            </a>
          ) : (
            news.title
          )}
        </h3>
        <p className="text-sm text-zinc-600">{news.description}</p>
      </div>
    </div>
  );
}



================================================
File: src/components/portfolio-entry.tsx
================================================
import Image from "next/image";
import { ArrowUpRight } from "lucide-react";
import { Portfolio } from "@/data/portfolio";

export function PortfolioEntry({ portfolio }: { portfolio: Portfolio }) {
  return (
    <div className="flex flex-col sm:flex-row gap-6">
      {portfolio.imageUrl && (
        <div className="w-1/4 min-w-[160px] relative">
          <Image
            src={portfolio.imageUrl}
            style={{ width: "100px", height: "auto" }}
            alt={portfolio.title}
            width={160}
            height={200}
            className="rounded-lg"
          />
        </div>
      )}
      <div className="flex flex-col flex-1">
        <h3 className="font-serif text-md mb-3">
          {portfolio.projectUrl ? (
            <a
              href={portfolio.projectUrl}
              className="group inline-flex items-center gap-2 hover:text-zinc-600 transition-colors duration-300"
            >
              {portfolio.title}
              <ArrowUpRight
                size={16}
                className="group-hover:translate-x-0.5 group-hover:-translate-y-0.5 transition-transform duration-300"
              />
            </a>
          ) : (
            portfolio.title
          )}
        </h3>

        {portfolio.technologies && (
          <div className="flex gap-2 mb-4 flex-wrap">
            {portfolio.technologies.map((tech, index) => (
              <span
                key={index}
                className="text-xs text-zinc-600 px-2 py-1 bg-zinc-100 rounded-full"
              >
                {tech}
              </span>
            ))}
          </div>
        )}

        <div className="flex gap-6">
          {portfolio.projectUrl && (
            <a
              href={portfolio.projectUrl}
              className="group inline-flex items-center gap-2 text-xs text-zinc-500 hover:text-zinc-900 transition-colors duration-300"
            >
              <ArrowUpRight
                size={12}
                className="group-hover:translate-x-0.5 group-hover:-translate-y-0.5 transition-transform duration-300"
              />
              <span className="tracking-wider uppercase">Project</span>
            </a>
          )}
          {portfolio.codeUrl && (
            <a
              href={portfolio.codeUrl}
              className="group inline-flex items-center gap-2 text-xs text-zinc-500 hover:text-zinc-900 transition-colors duration-300"
            >
              <ArrowUpRight
                size={12}
                className="group-hover:translate-x-0.5 group-hover:-translate-y-0.5 transition-transform duration-300"
              />
              <span className="tracking-wider uppercase">Code</span>
            </a>
          )}
          {portfolio.blogUrl && (
            <a
              href={portfolio.blogUrl}
              className="group inline-flex items-center gap-2 text-xs text-zinc-500 hover:text-zinc-900 transition-colors duration-300"
            >
              <ArrowUpRight
                size={12}
                className="group-hover:translate-x-0.5 group-hover:-translate-y-0.5 transition-transform duration-300"
              />
              <span className="tracking-wider uppercase">Blog</span>
            </a>
          )}
        </div>

        <p className="text-sm text-zinc-600 mb-4 mt-4 italic">
          {portfolio.description}
        </p>
      </div>
    </div>
  );
}



================================================
File: src/components/profile-section.tsx
================================================
import Image from "next/image";
import {
  Github,
  Linkedin,
  Mail,
  Twitter,
  ArrowUpRight,
  GraduationCap,
  // SignalMedium  // Remove unsed import
} from "lucide-react";
import { AboutMe } from "@/data/aboutme";

interface ProfileSectionProps {
  aboutMe: AboutMe;
}

export function ProfileSection({ aboutMe }: ProfileSectionProps) {
  if (!aboutMe) {
    return null;
  }

  return (
    <div className="md:sticky top-12 flex flex-row-reverse md:flex-col gap-4 md:space-y-8">
      {aboutMe.imageUrl && (
        <div className="w-1/3 md:w-full flex-shrink-0">
          <div className="relative max-h-[45vh] md:w-[65%] aspect-[3/4]">
            <Image
              src={aboutMe.imageUrl}
              alt={aboutMe.name}
              fill
              priority
              className="object-cover rounded-xl"
            />
          </div>
        </div>
      )}
      <div className="w-2/3 md:w-full">
        <h1 className="font-serif text-3xl font-light tracking-wide mb-3">
          {aboutMe.name}
        </h1>
        {aboutMe.altName && (
          <p className="text-zinc-600 text-md leading-relaxed tracking-wide mb-6">
            {aboutMe.altName}
          </p>
        )}
        <p className="text-zinc-600 text-xs leading-relaxed tracking-wide uppercase mb-6">
          {aboutMe.title}
          <br />
          {aboutMe.institutionUrl ? (
            <a
              href={aboutMe.institutionUrl}
              className="hover:text-zinc-900 transition-colors duration-300"
              target="_blank"
              rel="noopener noreferrer"
            >
              {aboutMe.institution}
            </a>
          ) : (
            aboutMe.institution
          )}
        </p>
        <div className="flex gap-6 mb-6">
          {aboutMe.blogUrl && (
            <a
              href={aboutMe.blogUrl}
              className="group inline-flex items-center gap-2 text-xs text-zinc-500 hover:text-zinc-900 transition-colors duration-300"
            >
              <ArrowUpRight
                size={12}
                className="group-hover:translate-x-0.5 group-hover:-translate-y-0.5 transition-transform duration-300"
              />
              <span className="tracking-wider uppercase">Blog</span>
            </a>
          )}
          {aboutMe.bookShelf && (
            <a
              href={aboutMe.bookShelf}
              className="group inline-flex items-center gap-2 text-xs text-zinc-500 hover:text-zinc-900 transition-colors duration-300"
            >
              <ArrowUpRight
                size={12}
                className="group-hover:translate-x-0.5 group-hover:-translate-y-0.5 transition-transform duration-300"
              />
              <span className="tracking-wider uppercase">Book shelf</span>
            </a>
          )}
        </div>
        <div className="space-y-2">
          <a
            href={`mailto:${aboutMe.email}`}
            className="inline-flex items-center gap-2 text-sm text-zinc-600 hover:text-zinc-900 transition-colors"
            target="_blank"
            rel="noopener noreferrer"
          >
            <Mail size={14} />
            {aboutMe.email}
          </a>
          {aboutMe.googleScholarUrl && (
            <>
              <br />
              <a
                href={aboutMe.googleScholarUrl}
                className="inline-flex items-center gap-2 text-sm text-zinc-600 hover:text-zinc-900 transition-colors"
                target="_blank"
                rel="noopener noreferrer"
              >
                <GraduationCap size={14} />
                Google Scholar
              </a>
            </>
          )}
          {aboutMe.twitterUsername && (
            <>
              <br />
              <a
                href={`https://twitter.com/${aboutMe.twitterUsername}`}
                className="inline-flex items-center gap-2 text-sm text-zinc-600 hover:text-zinc-900 transition-colors"
                target="_blank"
                rel="noopener noreferrer"
              >
                <Twitter size={14} />@{aboutMe.twitterUsername}
              </a>
            </>
          )}
          {aboutMe.githubUsername && (
            <>
              <br />
              <a
                href={`https://github.com/${aboutMe.githubUsername}`}
                className="inline-flex items-center gap-2 text-sm text-zinc-600 hover:text-zinc-900 transition-colors"
                target="_blank"
                rel="noopener noreferrer"
              >
                <Github size={14} />
                github.com/{aboutMe.githubUsername}
              </a>
            </>
          )}
          {aboutMe.linkedinUsername && (
            <>
              <br />
              <a
                href={`https://www.linkedin.com/in/${aboutMe.linkedinUsername}`}
                className="inline-flex items-center gap-2 text-sm text-zinc-600 hover:text-zinc-900 transition-colors"
                target="_blank"
                rel="noopener noreferrer"
              >
                <Linkedin size={14} />
                linkedin.com/in/{aboutMe.linkedinUsername}
              </a>
            </>
          )}
        </div>
      </div>
    </div>
  );
}


================================================
File: src/components/publication-entry.tsx
================================================
import Image from "next/image";
import { ArrowUpRight } from "lucide-react";
import { Publication } from "@/data/publication";

export function PublicationEntry({
  publication,
}: {
  publication: Publication;
}) {
  return (
    <div className="flex flex-col sm:flex-row gap-6">
      {publication.imageUrl && (
        <div className="w-full sm:w-1/4 min-w-[160px] relative">
          <Image
            src={publication.imageUrl}
            alt={publication.title}
            width={160}
            height={200}
            className="rounded-lg transition-all duration-300"
          />
        </div>
      )}
      <div className="flex flex-col flex-1">
        <div className="flex flex-row gap-4 items-center mb-2">
          <p className="text-xs text-zinc-500">
            {publication.conference} {publication.year}
          </p>
          {publication.award && (
            <div className="group flex px-2 py-1 bg-gradient-to-r from-amber-50 to-rose-50 rounded-md items-center shadow-md border border-amber-100/50 relative overflow-hidden hover:rotate-1 transition-all duration-300">
              <div className="absolute inset-0 translate-x-[-100%] group-hover:translate-x-[100%] transition-transform duration-1000 bg-gradient-to-r from-transparent via-white/90 to-transparent" />
              <p className="text-xs text-amber-700 font-medium relative">
                {publication.award}
              </p>
            </div>
          )}
        </div>
        <h3 className="font-serif text-md mb-3">{publication.title}</h3>
        <p className="text-sm text-zinc-600 mb-4">{publication.authors}</p>
        <div className="flex flex-row gap-6">
          {publication.paperUrl && (
            <a
              href={publication.paperUrl}
              className="group inline-flex items-center gap-2 text-xs text-zinc-500 hover:text-zinc-900 transition-colors duration-300"
            >
              <ArrowUpRight
                size={12}
                className="group-hover:translate-x-0.5 group-hover:-translate-y-0.5 transition-transform duration-300"
              />
              <span className="tracking-wider uppercase">Paper</span>
            </a>
          )}
          {publication.codeUrl && (
            <a
              href={publication.codeUrl}
              className="group inline-flex items-center gap-2 text-xs text-zinc-500 hover:text-zinc-900 transition-colors duration-300"
            >
              <ArrowUpRight
                size={12}
                className="group-hover:translate-x-0.5 group-hover:-translate-y-0.5 transition-transform duration-300"
              />
              <span className="tracking-wider uppercase">Code</span>
            </a>
          )}
          {publication.bibtex && (
            <a
              href={publication.bibtex}
              className="group inline-flex items-center gap-2 text-xs text-zinc-500 hover:text-zinc-900 transition-colors duration-300"
            >
              <ArrowUpRight
                size={12}
                className="group-hover:translate-x-0.5 group-hover:-translate-y-0.5 transition-transform duration-300"
              />
              <span className="tracking-wider uppercase">BibTeX</span>
            </a>
          )}
        </div>
        {publication.tldr && (
          <p className="text-sm italic text-zinc-600 mt-4">
            {publication.tldr}
          </p>
        )}
      </div>
    </div>
  );
}



================================================
File: src/data/aboutme.ts
================================================
export interface AboutMe {
  name: string;
  title: string;
  institution: string;
  description: string;
  email: string;
  imageUrl?: string;
  blogUrl?: string;
  bookShelf?: string;
  googleScholarUrl?: string;
  twitterUsername?: string;
  githubUsername?: string;
  linkedinUsername?: string;
  funDescription?: string; // Gets placed in the left sidebar
  secretDescription?: string; // Gets placed in the bottom
  altName?: string;
  institutionUrl?: string;
}

export const aboutMe: AboutMe = {
  name: "Chirag Joshi",
  title: "Builder & Learner",
  institution: "EdutorApp",
  description:
  "I&#39;m doing what I love most — building things that matter.<br><br>I believe in curiosity-driven growth. I&#39;m a mix of an engineer, a relentless learner, and someone who believes in doing bold, crazy things to create real impact.<br><br>At <a href='https://edutorapp.com/' target=&#39;_blank&#39;><b>Edutor App</b></a>, we&#39;re building an Agentic OS for Education — AI tools that personalize learning for every student.<br><br>One of the most electrifying moments of my life was attending <a href='https://x.com/Chiragjoshi_12/status/1797502241970291087' target=&#39;_blank&#39;><b>Jensen Huang&#39;s keynote</b></a> at Computex Taiwan.<br><br>In the meantime, I enjoy playing badminton, reading books and Gujarati literature, and writing poems, blogs, or stories. 🏸<br><br>I&#39;m 15 years old and I&#39;ve left school to build something truly valuable — and I&#39;m just getting started.",
  email: "chirag.edutorai@gmail.com",
  imageUrl:
    "https://i.ibb.co/YTLMfbWn/headshot24.webp",
  githubUsername: "chiragjoshi12",
  linkedinUsername: "chiragjoshi12",
  twitterUsername: "Chiragjoshi_12",
  blogUrl: "/blog",
  bookShelf: "/books",
  institutionUrl: "https://edutorapp.com/",
  // altName: "Chirkut",
  secretDescription: "I like badminton.",
};



================================================
File: src/data/blog.ts
================================================
// src/data/blog.ts

export interface BlogPost {
  title: string;
  date: string; // Format: "YYYY-MM-DD"
  url: string;  // The external URL to your Medium/Substack post
  description: string;
}

export const blogData: BlogPost[] = [
  {
    title: "આજના વિદ્યાર્થીઓને મારે કહેવું છે...",
    date: "2025-06-24",
    url: "https://chirag-ai.medium.com/%E0%AA%86%E0%AA%9C%E0%AA%A8%E0%AA%BE-%E0%AA%B5%E0%AA%BF%E0%AA%A6%E0%AB%8D%E0%AA%AF%E0%AA%BE%E0%AA%B0%E0%AB%8D%E0%AA%A5%E0%AB%80%E0%AA%93%E0%AA%A8%E0%AB%87-%E0%AA%AE%E0%AA%BE%E0%AA%B0%E0%AB%87-%E0%AA%95%E0%AA%B9%E0%AB%87%E0%AA%B5%E0%AB%81%E0%AA%82-%E0%AA%9B%E0%AB%87-cebfaa5f995f",
    description: "Turn PDFs into podcasts using AI! This guide shows how to use Gemini for dialogue generation and ElevenLabs for voice to create conversational audio from documents.",
  },
  {
    title: "નવા નદીસર પ્રાથમિક શાળા — એક આઇડિયલ સ્કૂલ 🏫",
    date: "2025-05-11",
    url: "https://chirag-ai.medium.com/%E0%AA%A8%E0%AA%B5%E0%AA%BE-%E0%AA%A8%E0%AA%A6%E0%AB%80%E0%AA%B8%E0%AA%B0-%E0%AA%AA%E0%AB%8D%E0%AA%B0%E0%AA%BE%E0%AA%A5%E0%AA%AE%E0%AA%BF%E0%AA%95-%E0%AA%B6%E0%AA%BE%E0%AA%B3%E0%AA%BE-%E0%AA%8F%E0%AA%95-%E0%AA%86%E0%AA%87%E0%AA%A1%E0%AA%BF%E0%AA%AF%E0%AA%B2-%E0%AA%B8%E0%AB%8D%E0%AA%95%E0%AB%82%E0%AA%B2-2cb9f9bc6361",
    description: "",
  },
  {
    title: "NotebookLM with Gemini and Elevenlabs (Detailed Documentation)",
    date: "2025-01-11",
    url: "https://chirag-ai.medium.com/notebooklm-with-gemini-and-elevenlabs-detailed-documentation-b8db6739ba9b",
    description: "Turn PDFs into podcasts using AI! This guide shows how to use Gemini for dialogue generation and ElevenLabs for voice to create conversational audio from documents.",
  },
  {
    title: "2024 wrapped",
    date: "2024-12-27",
    url: "https://chirag-ai.medium.com/2024-wrapped-chirag-joshi-596380060ea8",
    description: "",
  },
  {
    title: "November 2024 — A Month of Energy and Building",
    date: "2024-12-02",
    url: "https://chirag-ai.medium.com/november-a-month-of-energy-and-building-chirag-joshi-2935148f5a2f",
    description: "A month of energy and building.",
  },
  {
    title: "AI : આગળ કેવું વિશ્વ હશે !",
    date: "2024-04-24",
    url: "https://chirag-ai.medium.com/ai-%E0%AA%86%E0%AA%97%E0%AA%B3-%E0%AA%95%E0%AB%87%E0%AA%B5%E0%AB%81%E0%AA%82-%E0%AA%B5%E0%AA%BF%E0%AA%B6%E0%AB%8D%E0%AA%B5-%E0%AA%B9%E0%AA%B6%E0%AB%87-ai-%E0%AA%B5%E0%AA%BF%E0%AA%B7%E0%AB%87-%E0%AA%8F%E0%AA%95%E0%AA%A6%E0%AA%AE-%E0%AA%B8%E0%AA%B0%E0%AA%B3-%E0%AA%AD%E0%AA%BE%E0%AA%B7%E0%AA%BE%E0%AA%AE%E0%AA%BE%E0%AA%82-%E0%AA%B8%E0%AA%AE%E0%AA%9C%E0%AB%82%E0%AA%A4%E0%AB%80-c23adb6d4f9b",
    description: "",
  },
  {
    title: "AI કેવી રીતે કામ કરે છે ?",
    date: "2023-12-01",
    url: "https://chirag-ai.medium.com/ai-%E0%AA%95%E0%AB%87%E0%AA%B5%E0%AB%80-%E0%AA%B0%E0%AB%80%E0%AA%A4%E0%AB%87-%E0%AA%95%E0%AA%BE%E0%AA%AE-%E0%AA%95%E0%AA%B0%E0%AB%87-%E0%AA%9B%E0%AB%87-ai-%E0%AA%B5%E0%AA%BF%E0%AA%B7%E0%AB%87-%E0%AA%8F%E0%AA%95%E0%AA%A6%E0%AA%AE-%E0%AA%B8%E0%AA%B0%E0%AA%B3-%E0%AA%AD%E0%AA%BE%E0%AA%B7%E0%AA%BE%E0%AA%AE%E0%AA%BE%E0%AA%82-%E0%AA%B8%E0%AA%AE%E0%AA%9C%E0%AB%82%E0%AA%A4%E0%AB%80-8c0492091fc0",
    description: "",
  },
  {
    title: "AI : એક નવા વિશ્વની શરૂઆત (2)",
    date: "2023-11-15",
    url: "https://chirag-ai.medium.com/ai-%E0%AA%8F%E0%AA%95-%E0%AA%A8%E0%AA%B5%E0%AA%BE-%E0%AA%B5%E0%AA%BF%E0%AA%B6%E0%AB%8D%E0%AA%B5%E0%AA%A8%E0%AB%80-%E0%AA%B6%E0%AA%B0%E0%AB%82%E0%AA%86%E0%AA%A4-2-ai-%E0%AA%B5%E0%AA%BF%E0%AA%B7%E0%AB%87-%E0%AA%8F%E0%AA%95%E0%AA%A6%E0%AA%AE-%E0%AA%B8%E0%AA%B0%E0%AA%B3-%E0%AA%AD%E0%AA%BE%E0%AA%B7%E0%AA%BE%E0%AA%AE%E0%AA%BE%E0%AA%82-%E0%AA%B8%E0%AA%AE%E0%AA%9C%E0%AB%82%E0%AA%A4%E0%AB%80-511cd73ab75a",
    description: "A simple, clear explanation of what AI really is, how it evolved from basic machines to thinking models, and why it's the most powerful technology ever built.",
  },
  {
    title: "AI : એક નવા વિશ્વની શરૂઆત (1)",
    date: "2023-10-31",
    url: "https://chirag-ai.medium.com/ai-%E0%AA%8F%E0%AA%95-%E0%AA%A8%E0%AA%B5%E0%AA%BE-%E0%AA%B5%E0%AA%BF%E0%AA%B6%E0%AB%8D%E0%AA%B5%E0%AA%A8%E0%AB%80-%E0%AA%B6%E0%AA%B0%E0%AB%82%E0%AA%86%E0%AA%A4-%E0%AA%9A%E0%AA%BF%E0%AA%B0%E0%AA%BE%E0%AA%97-%E0%AA%9C%E0%AB%8B%E0%AA%B6%E0%AB%80-chirag-joshi-2f2463d14dcb",
    description: "A powerful beginner-friendly blog that explains why AI is the most transformative and urgent technology of our time, emphasizing its rapid evolution and universal impact.",
  },
];


================================================
File: src/data/books.ts
================================================
// src/data/books.ts
export interface Book {
  title: string;
  author: string;
  url?: string; // Optional: A URL for purchasing the book or for more info
  highlight?: "normal" | "great" | "remarkable";
}

export interface BooksByYear {
  year: string;
  books: Book[];
}

export const booksByYear: BooksByYear[] = [
  {
    year: "2025",
    books: [
      {
        title: "Elon Musk",
        author: "Ashlee Vance",
        highlight: "normal",
        url: "https://www.amazon.com/Elon-Musk-Tesla-SpaceX-Fantastic/dp/0062301233"
      },
      {
        title: "The Alchemist",
        author: "Paulo Coelho",
        highlight: "normal",
      },
    ]
  },
  {
    year: "2024",
    books: [
      {
        title: "Steve Jobs",
        author: "Walter Isaacson",
        highlight: "remarkable",
        url: "https://www.amazon.com/Steve-Jobs-Walter-Isaacson/dp/1451648537"
      },
      {
        title: "Sapiens",
        author: "Yuval Noah Harari",
        highlight: "great"
      },
      {
        title: "Charlie Chaplin",
        author: "Charlie Chaplin",
        highlight: "great"
      },
      {
        title: "સરદાર એટલે સરદાર",
        author: "ગુણવંત શાહ",
        highlight: "normal"
      },
      {
        title: "દિવાસ્વપ્ન",
        author: "ગિજુભાઈ બધેકા",
        highlight: "normal"
      },
      {
        title: "Totto-Chan: The Little Girl at the Window (Gujarati)",
        author: "Tetsuko Kuroyanagi",
        highlight: "remarkable"
      },
      {
        title: "Dollar Bahu",
        author: "Sudha Murthy",
        highlight: "normal"
      },
      {
        title: "The Man Who Knew Infinity : A Life of the Genius Ramanujan (Gujarati)",
        author: "Robert Kanigel",
        highlight: "normal"
      }
    ]
  }
]


================================================
File: src/data/education.ts
================================================
export interface Education {
  year: string;
  institution: string;
  degree: string;
  advisor?: string;
  thesis?: string;
  thesisUrl?: string;
}

export const educationData: Education[] = [
  // If you don't want to show education, just make the array empty.
  // {
  //   year: "2021—Present",
  //   institution: "Stanford University",
  //   degree: "Ph.D. in Computer Science",
  //   advisor: "Prof. Sarah Johnson",
  // },
  // {
  //   year: "2017—2021",
  //   institution: "Massachusetts Institute of Technology",
  //   degree: "B.S. in Computer Science and Mathematics",
  //   thesis: "Algorithmic Approaches to Causal Discovery",
  //   // Optional links to thesis
  //   // thesisUrl: "https://dspace.mit.edu/handle/1721.1/149111"
  // },
];



================================================
File: src/data/experience.ts
================================================
export interface Experience {
  date: string;
  title: string;
  company: string;
  description?: string;
  advisor?: string;
  manager?: string;
  companyUrl?: string;
}

export const experienceData: Experience[] = [
  {
    date: "Apr 2023 - Present",
    title: "AI Engineer",
    company: "EdutorApp",
    description:
      "Building the Agentic OS of Education — developing multi-agent systems to deliver deeply personalized K-12 learning experiences.",
    companyUrl: "https://edutorapp.com",
  },
  {
    date: "Aug 2024 - Present",
    title: "Builder",
    company: "AIRRE Club",
    description:
      "AIRRE is a mission-driven frontier tech club where we're nurturing young talent in AI, rockets, robotics, and energy. We're preparing first-principles thinkers who will build the future.",
    advisor: "Khetesh Akoliya",
    companyUrl: "https://x.com/airr_club",
  }
];



================================================
File: src/data/news.ts
================================================
export interface News {
  date: string;
  title: string;
  description: string;
  link?: string;
}

export const newsData: News[] = [
  // If you don't want to show news, just make the array empty.
  /*{
    date: "March 2024",
    title: "Paper accepted at ICML 2024",
    description: "Our work on causal discovery in time series data has been accepted at ICML 2024.",
    link: "https://icml.cc/",
  }*/
];



================================================
File: src/data/portfolio.ts
================================================
export interface Portfolio {
  title: string;
  description: string;
  technologies?: string[];
  imageUrl?: string;
  projectUrl?: string;
  codeUrl?: string;
  paperUrl?: string;
  blogUrl?: string;
}

export const portfolioData: Portfolio[] = [
  // Example entry
  {
    title: "Student Superpower",
    description:
      "Student Super Power is a system of AI agents that work together like a smart teacher team—tracking how each student learns, guiding them chapter by chapter, and helping them improve with the right support at the right time.",
    technologies: ["Python", "CrewAI", "Streamlit"],
    projectUrl: "https://www.youtube.com/watch?v=2K7YrZgkVF8",
    imageUrl:
      "https://i.ibb.co/bgZf98PF/2840d306-8c0d-44aa-8c06-0201fceb7790.jpg",
    codeUrl: "https://github.com/chiragjoshi12/Student-Super-Power",
  },
  {
    title: "Podcast Generation",
    description:
      "Transforms educational content into engaging Gujarati podcasts—making learning conversational, accessible, and easier to understand for students and teachers.",
    technologies: ["Python", "Gemini", "ElevenLabs"],
    projectUrl: "https://x.com/Chiragjoshi_12/status/1861022396184182945",
    imageUrl:
      "https://web.edutorapp.com/_next/static/media/default_prompt_icon.e666cb16.png",
    blogUrl: "https://chirag-ai.medium.com/notebooklm-with-gemini-and-elevenlabs-detailed-documentation-b8db6739ba9b",
  },
  {
    title: "RoastFolio",
    description:
      "Your Portfolio Roaster - analyzes your portfolio and gives you a brutally honest (but fun) recap.",
    technologies: ["Python", "TypeScript", "Gemini"],
    projectUrl: "https://roastfolio.vercel.app/",
    imageUrl: "https://roastfolio.vercel.app/favicon.ico",
  },
];



================================================
File: src/data/publication.ts
================================================
export interface Publication {
  year: string;
  conference: string;
  title: string;
  authors: string;
  paperUrl?: string;
  codeUrl?: string;
  bibtex?: string;
  tldr?: string;
  imageUrl?: string;
  award?: string;
}

export const publicationData: Publication[] = [
  // If you don't want to show publications, just make the array empty.
  // {
  //   year: "2024",
  //   conference: "NeurIPS",
  //   title: "Scalable Causal Discovery in High-Dimensional Time Series",
  //   authors: "Jane Smith, Sarah Johnson, Yue Zhang",
  //   paperUrl: "https://arxiv.org/abs/2409.15476",
  //   codeUrl: "https://github.com/jsmith/scalable-causal-discovery",
  //   //bibtex: "https://arxiv.org/abs/2409.15476.bib",
  //   tldr: "Using causal discovery to find the causal structure of high-dimensional time series data.",
  //   imageUrl:
  //     "https://images.unsplash.com/photo-1561622539-dffbfc2008fd?q=80&w=2076&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D",
  //   award: "🏆 Best Paper Award",
  //   // if you have an image in public/images, you can use it like this:
  //   // imageUrl: "/images/publication-image.jpg"
  // }
];



================================================
File: src/data/section-order.ts
================================================
export enum Section {
  Education = "education",
  Experience = "experience",
  Portfolio = "portfolio",
  Publication = "publication",
  News = "news",
}

export const sectionOrder = [
  Section.Experience,
  Section.News,
  Section.Education,
  Section.Publication,
  Section.Portfolio,
];



================================================
File: src/data/title-description.ts
================================================
// src/data/title-description.ts
export interface CustomMetadata {
  title?: string;
  description?: string;
}

export const customMetadata: CustomMetadata = {
  title: "Chirag Joshi | AI Engineer & Builder",
  description: "Personal website of Chirag Joshi, a 15-year-old AI Engineer building an Agentic OS for Education at EdutorApp. Discover my projects, blog, and what I'm learning.",
};


================================================
File: .github/workflows/nextjs.yml
================================================
# Sample workflow for building and deploying a Next.js site to GitHub Pages
#
# To get started with Next.js see: https://nextjs.org/docs/getting-started
#
name: Deploy Next.js site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "manager=yarn" >> $GITHUB_OUTPUT
            echo "command=install" >> $GITHUB_OUTPUT
            echo "runner=yarn" >> $GITHUB_OUTPUT
            exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "manager=npm" >> $GITHUB_OUTPUT
            echo "command=ci" >> $GITHUB_OUTPUT
            echo "runner=npx --no-install" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Unable to determine package manager"
            exit 1
          fi
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: ${{ steps.detect-package-manager.outputs.manager }}
      - name: Setup Pages
        uses: actions/configure-pages@v5
        with:
          # Automatically inject basePath in your Next.js configuration file and disable
          # server side image optimization (https://nextjs.org/docs/api-reference/next/image#unoptimized).
          #
          # You may remove this line if you want to manage the configuration yourself.
          static_site_generator: next
      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            .next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-
      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
      - name: Build with Next.js
        run: ${{ steps.detect-package-manager.outputs.runner }} next build
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4


